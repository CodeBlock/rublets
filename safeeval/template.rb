# Generated by Nick Markwell's (duckinator) SafeEval class on %time%

require 'stringio'
require 'etc'
require %file%

trap("XCPU") do
  puts "Execution took longer than %timelimit% seconds, exiting."
  exit!
end

nobody_uid = Etc.getpwnam('nobody').uid
nobody_gid = Etc.getgrnam('nobody').gid
Dir.chroot(%chroot%)
Dir.chdir("/")

# RAM limit
Process.setrlimit(Process::RLIMIT_AS, %memlimit%*1024*1024)

# CPU time limit
Process.setrlimit(Process::RLIMIT_CPU, %timelimit%)

Process.initgroups('nobody', nobody_gid)
Process::GID.change_privilege(nobody_gid)
Process::UID.change_privilege(nobody_uid)

if Process.uid != nobody_uid
  puts "Error setting up chroot"
  exit
end

cmd = %code%

output = ''
result = ''
error = nil

begin
  seval = SafeEval.new
  output = seval.out_to_string do
    result = seval.eval cmd
  end
rescue Exception => e
  error = e
end

error ||= seval.error

begin
  if !error.nil? && output.empty?
    puts "#{error.class}: #{error.message}"
  elsif !output.empty?
    puts output
  else
    puts result.inspect
  end
rescue => e
  puts "#{e.class}: #{e.message}"
end
